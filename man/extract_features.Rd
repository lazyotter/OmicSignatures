% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_signature.R
\name{extract_features}
\alias{extract_features}
\title{Extract Selected Features from a cv.glmnet Object at Specified Lambda}
\usage{
extract_features(df_crossval, lambda, features, returncovars = F)
}
\arguments{
\item{df_crossval}{A \code{cv.glmnet} object, typically the result of running \code{cv.glmnet} on a dataset. This object contains the cross-validation results and the fitted model.}

\item{lambda}{A character string specifying the lambda value to use for feature selection. This can be either "lambda.min" or "lambda.1se" to select features based on the respective lambda value.}

\item{features}{A character vector of column names specifying all feature names.}

\item{returncovars}{A boolean indicating if vector returned should also include covariates. Default is False.}
}
\value{
A character vector containing the names of the features selected at the specified lambda, excluding the intercept.
}
\description{
This function extracts the selected features from a \code{cv.glmnet} object based on the coefficients at a specified lambda value.
It returns the names of the features that have non-zero coefficients, excluding the intercept.
}
\details{
This function uses the \code{cv.glmnet} object to extract the coefficients at the specified lambda value. It identifies the features with non-zero coefficients and returns their names. The intercept is excluded from the result.
}
\examples{
\dontrun{
# Example usage of extract_features
df_crossval <- glmnet::cv.glmnet(x = training_data, y = response_data)
selected_features_min <- extract_features(df_crossval, "lambda.min")
selected_features_1se <- extract_features(df_crossval, "lambda.1se")
print(selected_features_min)
print(selected_features_1se)
}

}
\seealso{
\code{\link[glmnet]{cv.glmnet}}, \code{\link{format_cvglmnet}}
}
